-- vim: set ft=Haskell:
type TTimer : {}

type TProcWatcher : {
    type: String,
    flamer: TFlamer,
    pid: Number,
    cmdline: String,
    probeInterval: Number,
    filePath: String,
    nextProbe: Number,
    timer: TTimer | null,

    boundOnProbe: () => void,
    boundOnFile: (err: Error | null, text: String) => void,

    scheduleNextProbe: (this: TProcWatcher) => void,
    watch: (this: TProcWatcher) => void,
    onProbe: (this: TProcWatcher) => void,
    onFile: (this: TProcWatcher, err: Error | null, text: String) => void
}

type TFlamer : {
    handleError: (err: Error, ctx: TProcWatcher) => void
}

type TProcInfo : {
    timestamp: Number,
    pid: Number,
    state: String,
    utime: Number,
    stime: Number,
    ttime: Number,
    processor: Number,
    guestTime: Number
}

ProcWatcher : (
    this: TProcWatcher, flamer: TFlamer, pid: Number, cmdline: String
) => void

ProcInfo : (
    this: TProcInfo, pid: Number, state: String, utime: String,
    stime: String, processor: String, guestTime: String
) => void
